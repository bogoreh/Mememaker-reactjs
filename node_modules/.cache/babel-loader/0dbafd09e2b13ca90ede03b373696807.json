{"ast":null,"code":"var _jsxFileName = \"/home/abdibogoreh/Downloads/react-meme-generator-master/src/components/Meme.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport \"./Meme.css\";\nimport useGenerateRandomMeme from \"../hooks/use-generate-random-meme\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Meme = () => {\n  _s();\n\n  const [meme, setMeme] = useState({\n    topText: \"\",\n    bottomText: \"\",\n    imageUrl: \"http://i.imgflip.com/1bij.jpg\"\n  });\n  const randomMeme = useGenerateRandomMeme(); //Get a random meme from memesArray\n\n  function getRandomMeme(e) {\n    e.preventDefault();\n    setMeme(prevMeme => ({ ...prevMeme,\n      imageUrl: randomMeme.url\n    }));\n  } //Handle the input text change\n\n\n  function handleInputChange(e) {\n    const {\n      value,\n      name\n    } = e.target;\n    setMeme(prevMeme => ({ ...prevMeme,\n      [name]: value\n    }));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form--input\",\n        placeholder: \"Top text\",\n        name: \"topText\",\n        onChange: handleInputChange,\n        value: meme.topText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form--input\",\n        placeholder: \"Bottom Text\",\n        name: \"bottomText\",\n        onChange: handleInputChange,\n        value: meme.bottomText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"form--button\",\n        onClick: getRandomMeme,\n        children: \"Get a new Meme Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"meme--container\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        alt: \"\",\n        src: meme.imageUrl,\n        className: \"meme--image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"meme--top--text\",\n        children: meme.topText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"meme--bottom--text\",\n        children: meme.bottomText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Meme, \"vu+e657+2yz/SCMhqrRaRKcXj5Y=\", false, function () {\n  return [useGenerateRandomMeme];\n});\n\n_c = Meme;\nexport default Meme;\n\nvar _c;\n\n$RefreshReg$(_c, \"Meme\");","map":{"version":3,"sources":["/home/abdibogoreh/Downloads/react-meme-generator-master/src/components/Meme.jsx"],"names":["useState","useGenerateRandomMeme","Meme","meme","setMeme","topText","bottomText","imageUrl","randomMeme","getRandomMeme","e","preventDefault","prevMeme","url","handleInputChange","value","name","target"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAO,YAAP;AACA,OAAOC,qBAAP,MAAkC,mCAAlC;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC;AAC/BK,IAAAA,OAAO,EAAE,EADsB;AAE/BC,IAAAA,UAAU,EAAE,EAFmB;AAG/BC,IAAAA,QAAQ,EAAE;AAHqB,GAAD,CAAhC;AAMA,QAAMC,UAAU,GAAGP,qBAAqB,EAAxC,CAPiB,CASjB;;AACA,WAASQ,aAAT,CAAuBC,CAAvB,EAA0B;AACxBA,IAAAA,CAAC,CAACC,cAAF;AACAP,IAAAA,OAAO,CAAEQ,QAAD,KAAe,EACrB,GAAGA,QADkB;AAErBL,MAAAA,QAAQ,EAAEC,UAAU,CAACK;AAFA,KAAf,CAAD,CAAP;AAID,GAhBgB,CAkBjB;;;AACA,WAASC,iBAAT,CAA2BJ,CAA3B,EAA8B;AAC5B,UAAM;AAAEK,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAkBN,CAAC,CAACO,MAA1B;AAEAb,IAAAA,OAAO,CAAEQ,QAAD,KAAe,EACrB,GAAGA,QADkB;AAErB,OAACI,IAAD,GAAQD;AAFa,KAAf,CAAD,CAAP;AAID;;AAED,sBACE;AAAA,4BACE;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAA,8BACE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,SAAS,EAAC,aAFZ;AAGE,QAAA,WAAW,EAAC,UAHd;AAIE,QAAA,IAAI,EAAC,SAJP;AAKE,QAAA,QAAQ,EAAED,iBALZ;AAME,QAAA,KAAK,EAAEX,IAAI,CAACE;AANd;AAAA;AAAA;AAAA;AAAA,cADF,eASE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,SAAS,EAAC,aAFZ;AAGE,QAAA,WAAW,EAAC,aAHd;AAIE,QAAA,IAAI,EAAC,YAJP;AAKE,QAAA,QAAQ,EAAES,iBALZ;AAME,QAAA,KAAK,EAAEX,IAAI,CAACG;AANd;AAAA;AAAA;AAAA;AAAA,cATF,eAiBE;AAAQ,QAAA,SAAS,EAAC,cAAlB;AAAiC,QAAA,OAAO,EAAEG,aAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAsBE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,8BACE;AAAK,QAAA,GAAG,EAAC,EAAT;AAAY,QAAA,GAAG,EAAEN,IAAI,CAACI,QAAtB;AAAgC,QAAA,SAAS,EAAC;AAA1C;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAI,QAAA,SAAS,EAAC,iBAAd;AAAA,kBAAiCJ,IAAI,CAACE;AAAtC;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAI,QAAA,SAAS,EAAC,oBAAd;AAAA,kBAAoCF,IAAI,CAACG;AAAzC;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YAtBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA8BD,CA1DD;;GAAMJ,I;UAOeD,qB;;;KAPfC,I;AA4DN,eAAeA,IAAf","sourcesContent":["import { useState } from \"react\";\nimport \"./Meme.css\";\nimport useGenerateRandomMeme from \"../hooks/use-generate-random-meme\";\n\nconst Meme = () => {\n  const [meme, setMeme] = useState({\n    topText: \"\",\n    bottomText: \"\",\n    imageUrl: \"http://i.imgflip.com/1bij.jpg\",\n  });\n\n  const randomMeme = useGenerateRandomMeme();\n\n  //Get a random meme from memesArray\n  function getRandomMeme(e) {\n    e.preventDefault();\n    setMeme((prevMeme) => ({\n      ...prevMeme,\n      imageUrl: randomMeme.url,\n    }));\n  }\n\n  //Handle the input text change\n  function handleInputChange(e) {\n    const { value, name } = e.target;\n\n    setMeme((prevMeme) => ({\n      ...prevMeme,\n      [name]: value,\n    }));\n  }\n\n  return (\n    <main>\n      <form className=\"form\">\n        <input\n          type=\"text\"\n          className=\"form--input\"\n          placeholder=\"Top text\"\n          name=\"topText\"\n          onChange={handleInputChange}\n          value={meme.topText}\n        />\n        <input\n          type=\"text\"\n          className=\"form--input\"\n          placeholder=\"Bottom Text\"\n          name=\"bottomText\"\n          onChange={handleInputChange}\n          value={meme.bottomText}\n        />\n        <button className=\"form--button\" onClick={getRandomMeme}>\n          Get a new Meme Image\n        </button>\n      </form>\n      <div className=\"meme--container\">\n        <img alt=\"\" src={meme.imageUrl} className=\"meme--image\" />\n        <h4 className=\"meme--top--text\">{meme.topText}</h4>\n        <h4 className=\"meme--bottom--text\">{meme.bottomText}</h4>\n      </div>\n    </main>\n  );\n};\n\nexport default Meme;\n"]},"metadata":{},"sourceType":"module"}